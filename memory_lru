#!/usr/bin/perl -w
#
# Plugin to monitor memory usage.
#
# Origional Author: Jimmy Olsen, Mike Fedyk
# Author: KOSAKI Motohiro
#
# Parameters:
#
# 	config   (required)
# 	autoconf (optional - only used by munin-config)
#
# Magic markers (optional - only used by munin-config and some
# installation scripts):
#%# family=auto
#%# capabilities=autoconf


if ($ARGV[0] and $ARGV[0] eq "autoconf")
{
	if (-r "/proc/meminfo")
	{
		print "yes\n";
		exit 0;
	}
	else
	{
		print "/proc/meminfo not found\n";
		exit 1;
	}
}

my %mems;
&fetch_meminfo;

if ($ARGV[0] and $ARGV[0] eq "config")
{
	print "graph_args --base 1024 -l 0 --vertical-label Bytes --upper-limit ", $mems{'Active'} + $mems{'Inactive'} + $mems{'Unevictable'}, "\n";
	print "graph_title LRU diagnostics\n";
	print "graph_category system\n";
	print "graph_info xxx\n";
	print "graph_order active_anon inactive_anon active_file inactive_file unevictable\n";

	print "active_anon.label active_anon\n";
	print "active_anon.draw AREA\n";
	print "active_anon.info Active(anon)\n";

	print "inactive_anon.label inactive_anon\n";
	print "inactive_anon.draw STACK\n";
	print "inactive_anon.info Inctive(anon)\n";

	print "active_file.label active_file\n";
	print "active_file.draw STACK\n";
	print "active_file.info Active(file)\n";

	print "inactive_file.label inactive_file\n";
	print "inactive_file.draw STACK\n";
	print "inactive_file.info Inctive(file)\n";

	print "unevictable.label unevictable\n";
	print "unevictable.draw STACK\n";
	print "unevictable.info Unevictable\n";
	
	exit 0;
}

# Any optional value needs to be initialized to zero if it's used in a calculation below
# and is has not been set by &fetch_meminfo

if (exists $mems{'Active(anon)'})
{
	print "active_anon.value ", $mems{'Active(anon)'}, "\n";
}
if (exists $mems{'Inactive(anon)'})
{
	print "inactive_anon.value ", $mems{'Inactive(anon)'}, "\n";
}
if (exists $mems{'Active(file)'})
{
	print "active_file.value ", $mems{'Active(file)'}, "\n";
}
if (exists $mems{'Inactive(file)'})
{
	print "inactive_file.value ", $mems{'Inactive(file)'}, "\n";
}
if (exists $mems{'Unevictable'})
{
	print "unevictable.value ", $mems{'Unevictable'}, "\n";
}


sub fetch_meminfo
{
	open (IN, "/proc/meminfo") || die "Could not open /proc/meminfo for reading: $!";
	while (<IN>)
	{
		if (/^([\w\(\)]+):\s*(\d+)\s+kb/i)
		{
			$mems{"$1"} = $2 * 1024;
		}
	}
	close (IN);
}


# vim:syntax=perl:ts=8
